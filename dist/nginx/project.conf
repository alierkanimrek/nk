server {
    listen 443 ssl;
    #ssl on;
    
    ssl_certificate /etc/nginx/conf.d/server-cert.pem;
    ssl_certificate_key /etc/nginx/conf.d/server-key.pem;

    #server_name project.net;
    #ssl_certificate /etc/nginx/ssl/project.net/ssl-bundle.crt;
    #ssl_certificate_key /etc/nginx/ssl/project.net/project.key;
    #ssl_prefer_server_ciphers on;

    ## OCSP Stapling
    #resolver 8.8.8.8 8.8.4.4;
    #ssl_stapling on;
    #ssl_stapling_verify on;
    #ssl_trusted_certificate /etc/nginx/ssl/project.net/ssl-bundle.crt;


    # Allow file uploads
    client_max_body_size 50M;

    #server_name project.net www.project.net;
    root /usr/share/nginx/html;

    location /heap/ {
    }
    
    location / {
        proxy_pass_header Server;
        proxy_set_header Host $http_host;
        proxy_redirect off; 
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Scheme $scheme;
        proxy_pass http://frontend;
    }

    location /robots.txt { alias /usr/share/nginx/html/heap/robots.txt; }
    location /favicon.ico { alias /usr/share/nginx/html/heap/favicon.ico; }

    #location /r {
    #    proxy_pass_header Server;
    #    proxy_set_header Host $http_host;
    #    proxy_redirect off; 
    #    proxy_set_header X-Real-IP $remote_addr;
    #    proxy_set_header X-Scheme $scheme;
    #    proxy_pass http://robotfrontends;
    #}


    #location /control/socket {
    #    proxy_http_version 1.1;
    #    proxy_set_header Upgrade $http_upgrade;
    #    proxy_set_header Connection "upgrade";
    #    proxy_set_header Host $host;
    #    proxy_pass http://frontends;
    #}
}

server {
    listen   80;
    server_name  project.net;

    # Redirect all HTTP requests to HTTPS with a 301 Moved Permanently response.
    return 301 https://$host$request_uri;

    root /usr/share/nginx/html;
}